################## data dowloading ##########

################prefetch###########################
# 获取SRR
cat > SRR.txt 
SRR14864123
SRR14864124
SRR14864125
SRR14864126
SRR14864127
SRR14864128

#装包
conda install sra-tools
conda update sra-tools

#批量下载
cat SRR.txt |while read id;do (prefetch -X 100G $id );done

# 1.批量将SRA文件转换fastq文件
for folder in SRR*; do
    file="${folder}/${folder}.sra"
    fasterq-dump -p -e 2 --split-3 -O "$folder" "$file"
    echo "${folder}.sra is done!"
done

{
    for folder in SRR*; do
        file="${folder}/${folder}.sra"
        fasterq-dump -p -e 2 --split-3 -O "$folder" "$file"
        echo "${folder}.sra is done!"
    done
} > output.log 2>&1 &

# 2.批量将fastq文件压缩成fastq.gz文件
gzip ./SRR*/*.fastq &

mv ./SRR*/*.gz ./all

###################aspera ###################################
conda install python=3.7 
conda install -y -c hcc aspera-cli
conda install -y -c bioconda sra-tools
which ascp 
#搞清楚你的软件被conda安装在哪

(zgy_up) xb@xb-X10DAi:/sda/zgy/01_bulk/epilepsy/PRJEB63322/00_raw$ which ascp
/home/xb/anaconda3/envs/zgy_up/bin/ascp

# 密钥
ll /home/xb/anaconda3/envs/download/etc/asperaweb_id_dsa.openssh

cat /sda/zgy/01_bulk/CTE_2/01_qc/bad/fq2.txt | while read id
do
/home/xb/anaconda3/envs/zgy_up/bin/ascp -QT -l 300m -P33001 -i /home/xb/anaconda3/envs/download/etc/asperaweb_id_dsa.openssh era-fasp@$id /sda/zgy/01_bulk/CTE_2/01_qc/bad
done

###########
#!/bin/bash

# 定义输入文件和目标目录
input_file="/sda/zgy/01_bulk/CTE_2/01_qc/bad/fq2.txt"
target_dir="/sda/zgy/01_bulk/CTE_2/01_qc/bad"
ascp_path="/home/xb/anaconda3/envs/zgy_up/bin/ascp"
aspera_key="/home/xb/anaconda3/envs/download/etc/asperaweb_id_dsa.openssh"

# 从文件中读取 ID 并执行 ascp 命令
while read -r id; do
    echo "Downloading from era-fasp@$id to $target_dir"
    $ascp_path -QT -l 300m -P33001 -i $aspera_key "era-fasp@$id" "$target_dir"
done < "$input_file"
##############

ascp -QT -l 300m -P33001 -i /home/xb/anaconda3/envs/download/etc/asperaweb_id_dsa.openssh era-fasp@fasp.sra.ebi.ac.uk:/vol1/fastq/ERR115/039/ERR11580639/ERR11580639_2.fastq.gz  /sda/zgy/01_bulk/epilepsy/PRJEB63322/00_raw

####################### qc ###########################
conda install fastqc multiqc -y
# 一：质控前的初看测序数据质量：fastqc与multiqc
# 1.激活专门用于RNAseq数据处理的小环境rna,进行fastqc与multiqc
conda activate zgy_1 #激活转录组测序数据处理的小环境
# 2.先进行fastqc
nohup fastqc -t 8 -o ./ ERR*.fastq.gz > qc.log 2>&1 &  
# 3.对fastqc后的zip数据进行multiqc
nohup multiqc ./*.zip -o ./ > ./multiqc.log 2>&1 &

# 二:trimmgalore质控
## 单端
ls *gz |while read id;do (nohup trim_galore  -q 25 --phred33 --length 36 --stringency 3 -o ./  $id & );done
## 双端
# 文件分类
ls | grep _1.fastq.gz > gz1
ls | grep _2.fastq.gz > gz2
paste gz1 gz2 > config

vim trim.sh


########### 5 in a time ############
dir=/sda/zgy/01_bulk/CTE_2/01_qc/
cat config | while read id; do
    arr=(${id})  # 使用括号将 `id` 分割为数组
    fq1=${arr[0]}
    fq2=${arr[1]}
    
    # 创建独特的日志文件名，使用 ID 作为文件名的一部分
    log_file="./trim_${fq1##*/}.log"  # 从 fq1 中提取文件名
       
    # 启动 trim_galore 的后台进程
    nohup trim_galore -q 25 --phred33 --length 36 --stringency 3 --paired -o $dir $fq1 $fq2 > $log_file 2>&1 &
    
    # 计数器
    count=$((count + 1))
    
    # 每处理 5 个文件就等待所有后台进程完成
    if [ $count -eq 10 ]; then
        wait  # 等待所有后台进程完成
        count=0  # 重置计数器
    fi
done

# 等待最后一批未完成的后台进程
wait
###################
# 运行脚本
nohup bash trim.sh > trim.log 2>&1 &

trim_galore -q 25 --phred33 --length 36 --stringency 3 --paired -o ./ ERR1363368_1.fastq.gz ERR1363368_2.fastq.gz
#三:质控后数据也需要用fastqc与multiqc看看质控效果
# 01批量fastqc
nohup fastqc -t 12 -o ./ SRR*_trimmed.fq.gz > qc_trimmed.log 2>&1 & 
# 02开始multiqc
nohup multiqc *trimmed_fastqc.zip -o ./ > ./mtqc_trim.log 2>&1 &
#################################比对#############################
conda install hisat2 -y
conda install samtools=1.6 -y
#参考基因组下载，hisat2官网：https://daehwankimlab.github.io/hisat2/
# https://cloud.biohpc.swmed.edu/index.php/s/grcm38/download

wget https://genome-idx.s3.amazonaws.com/hisat/grch38_genome.tar.gz
tar -zxvf grch38_genome.tar.gz

## 双端
vim hisat2bam.sh
ls *fq.gz | cut -d "_" -f 1 |while read id
do 
hisat2 -p 6 -x /sda/zgy/00_ref/grch38/genome  -1 ${id}_1_val_1.fq.gz -2 ${id}_2_val_2.fq.gz | samtools sort -@ 6 -o /sda/zgy/01_bulk/epilepsy/PRJEB63322/02_align/${id%%_*}.bam
done

nohup bash hisat2bam.sh > hisat2bam.log 2>&1 &

#####脚本
############################
echo -e  " \n \n \n 333#  Align !!! hisat2 !!!\n \n \n "
date
########set#### ###set#### ###set####   
index='/sda/zgy/00_ref/grch38/genome'

mkdir  -p   ~/test/align/flag
cd ~/test/align/
pwd
cat ~/test/idname | while read id
do
         echo "333#  ${id} ${id} ${id}  is on the hisat2 Working !!!"
################ paired ###############################         
            hisat2 -t -p 12 -x  $index \
       -1 ~/test/clean/${id}_*1*gz  \
       -2  ~/test/clean/${id}_*2*gz  -S  ${id}.sam
######################################################
################Single################################
#              hisat2 -t -p 12 -x  $index  \
#                     -U ~/test/clean/${id}_trimmed.fq.gz \
#                     -S  ./${id}.sam  

########################################################           

### sam2bam and remove sam ###
    echo -e  " ${id} sam2bam and remove sam   "
    samtools sort -@ 12 -o  ~/test/align/${id}_sorted.bam  ${id}.sam
    rm ${id}.sam
done

#### samtools index and flagstat ####
echo -e  " \n \n \n samtools index and flagstat \n  " 
cd -p  ~/test/align/flag
pwd
#ls ~/test/align/*.bam | xargs  -i  samtools index  -@  12  {}    
ls ~/test/align/*.bam  | while read id ;\
do
        samtools flagstat -@ 12 $id > $(basename $id '.bam').flagstat
done
multiqc ./

echo -e " \n \n \n  333# ALL  Work Done !!!\n \n \n "
date

nohup bash 3_align2sam2bam_hisat2.sh >log_3 2>&1 &




########################### 定量 ####################
# 下载基因组注释文件
wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_46/gencode.v46.annotation.gtf.gz
gunzip gencode.v46.annotation.gtf.gz

conda install subread -y
##双端
nohup featureCounts -T 5 -p -t exon -g gene_id  -a ./gencode.v46.annotation.gtf -o  ./all.id.txt *bam 1>counts.id.log 2>&1 &
